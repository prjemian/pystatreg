name: Publish Sphinx Docs to GitHub Pages

on:
  # Build the docs on pushes to main branch, PRs to main branch, and new tags.
  # Publish only on demand.
  push:
    branches:
      - main
    tags:
      - '*'  # all tags
  pull_request:
    branches:
      - main
  workflow_dispatch:   # allow manual triggering
    inputs:
      deploy:
        description: 'Deploy documentation'
        type: boolean
        required: true
        default: false

defaults:
  run:
    shell: bash -l {0}

jobs:

  pages:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Info
        run: |
          echo $(pwd)
          ls -lAFgh

      - name: Install package
        run: |
          pip install --no-deps -e . -vv

      - name: Diagnostics
        run: |
          python -m pip list
          python -c "import pysumreg; print(f'{pysumreg.__version__=}')"

      - name: Install Sphinx build requirements
        run: |
          pip install setuptools-scm sphinx pydata-sphinx-theme
          echo "--------------- diagnostic pip list ---------------"
          pip list

      - name: Make Temporary Directory for Sphinx content
        run: |
          echo "TEMPDIR=$(mktemp -d)" >> ${GITHUB_ENV}
          echo "VERSION=$(./setup.py --version)" >> ${GITHUB_ENV}

      - name: Show Environment variables
        run: |
          echo "TEMPDIR=${TEMPDIR}"
          echo "VERSION=${VERSION}"

      - name: Sphinx
        run: |
          sphinx-build -M html ./docs/source "${TEMPDIR}/build"

      - name: Build gh-pages content
        run: |
          # get the new docs
          pushd "${TEMPDIR}"
          mv ./build/html "./${VERSION}"
          ln -s "./${VERSION}" ./dev
          /bin/rm -rf ./build
          popd

          # get the redirect page
          # TODO: change "/dev" to "/latest"
          cp ./.github/index.html "${TEMPDIR}"

          # make the switcher file
          mkdir "${TEMPDIR}/_static"
          # TODO: build this file dynamically
          cp ./docs/source/_static/switcher.json "${TEMPDIR}/_static"

          # diagnostic
          ls -lAFgh "${TEMPDIR}"

      - name: Deploy (to gh-pages branch) only on demand
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event.inputs.deploy }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: "${TEMPDIR}"
          force_orphan: true
