name: Publish Sphinx Docs to GitHub Pages

on:
  # Build the docs on pushes to main branch, PRs to main branch, and new tags.
  # Publish only on demand.
  push:
    branches:
      - main
    tags:
      - '*'  # all tags
  pull_request:
    branches:
      - main
  workflow_dispatch:   # allow manual triggering
    inputs:
      deploy:
        description: 'Deploy documentation'
        type: boolean
        required: true
        default: false

defaults:
  run:
    shell: bash -l {0}

jobs:

  docs:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Info
        run: |
          echo $(pwd)
          ls -lAFgh

      - name: Install package
        run: |
          pip install --no-deps -e . -vv

      - name: Diagnostics
        run: |
          python -m pip list
          python -c "import pysumreg; print(f'{pysumreg.__version__=}')"

      - name: Install Sphinx build requirements
        run: |
          pip install setuptools-scm sphinx pydata-sphinx-theme
          echo "--------------- diagnostic pip list ---------------"
          pip list

      - name: Make Temporary Directory for Sphinx content
        run: |
          echo "TEMPDIR=$(mktemp -d)" >> ${GITHUB_ENV}
          echo "VERSION=$(./setup.py --version)" >> ${GITHUB_ENV}

      - name: Show Environment variables
        run: |
          echo "TEMPDIR=${TEMPDIR}"
          echo "VERSION=${VERSION}"

      - name: Re-build the master directory (contains all documentation versions)
        run: |
          cp .github/index.html "${TEMPDIR}"

          cd "${TEMPDIR}"
          mv build/html "${VERSION}"
          /bin/rm -rf build
          ln -s "./${VERSION}" dev

          # add previous documentation (built versions)
          wget https://github.com/prjemian/pysumreg/archive/refs/heads/gh-pages.zip
          unzip -q gh-pages.zip
          /bin/rm gh-pages.zip

          source ../define_versions.sh
          for v in ${versions}
            do
                if [ -d "pysumreg-gh-pages/${v}" ]
                  then
                      echo "directory 'pysumreg-gh-pages/${v}' exists"
                      mv "pysumreg-gh-pages/${v}" ./
                      latest="${v}"
                  fi
            done
          echo "latest=${latest}"
          ln -s "./${latest}" ./latest

          /bin/rm -rf pysumreg-gh-pages

      - name: Info
        run: |
          cd "${TEMPDIR}"
          echo "pwd=$(pwd)"
          ls -laFGh

      - name: Deploy (to gh-pages branch) only on demand
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event.inputs.deploy }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: "${{ env.TEMPDIR }}"
          force_orphan: true
